@use 'tokens' as *

// =============================================================================
// ESSENTIAL MIXINS
// =============================================================================
// Core patterns used throughout the theme

/// Screen reader only content
@mixin sr-only
  position: absolute !important
  width: 1px !important
  height: 1px !important
  padding: 0 !important
  margin: -1px !important
  overflow: hidden !important
  clip: rect(0, 0, 0, 0) !important
  white-space: nowrap !important
  border: 0 !important

/// Consistent focus ring styling
/// @param {Color} $color - Focus ring color
/// @param {String} $width - Focus ring width
/// @param {String} $offset - Focus ring offset
@mixin focus-ring($color: var(--blue-6), $width: 2px, $offset: 2px)
  outline: $width solid $color
  outline-offset: $offset
  border-radius: var(--radius-1)

/// Animation with automatic reduced motion support
/// @param {String} $property - CSS property to animate
/// @param {String} $duration - Animation duration
/// @param {String} $easing - Animation easing
@mixin animate($property, $duration: duration('medium'), $easing: easing('default'))
  transition: $property $duration $easing
  
  @media (prefers-reduced-motion: reduce)
    transition-duration: 0.01s

/// Text truncation with ellipsis
/// @param {Number} $lines - Number of lines before truncation
@mixin truncate($lines: 1)
  @if $lines == 1
    overflow: hidden
    text-overflow: ellipsis
    white-space: nowrap
  @else
    display: -webkit-box
    -webkit-line-clamp: $lines
    -webkit-box-orient: vertical
    overflow: hidden

/// Consistent surface/card styling
/// @param {Number} $elevation - Shadow elevation level (1-6)
/// @param {Color} $bg - Background color
/// @param {String} $radius - Border radius
@mixin surface($elevation: 2, $bg: var(--surface-1), $radius: var(--radius-2))
  background-color: $bg
  border-radius: $radius
  box-shadow: var(--shadow-#{$elevation})
  
  @if $elevation > 2
    backdrop-filter: blur(4px)

/// Aspect ratio container
/// @param {String} $ratio - Aspect ratio (e.g., '16/9', '4/3', '1/1')
@mixin aspect-ratio($ratio)
  aspect-ratio: $ratio
  
  // Fallback for older browsers
  @supports not (aspect-ratio: 1)
    position: relative
    
    &::before
      content: ''
      display: block
      width: 100%
      
      @if $ratio == '16/9'
        padding-bottom: 56.25%
      @else if $ratio == '4/3'
        padding-bottom: 75%
      @else if $ratio == '1/1'
        padding-bottom: 100%
    
    > *
      position: absolute
      top: 0
      left: 0
      width: 100%
      height: 100%

// Helper function to strip units from values
@function strip-unit($number)
  @if type-of($number) == 'number' and not unitless($number)
    @return $number / ($number * 0 + 1)
  @return $number