@use 'variables' as *

// Generic mixin for alert colors that can be used for any theme
@mixin alert-colors($note, $tip, $important, $warning, $caution)
  .markdown-alert-note:before
    background: $note
  .markdown-alert-tip:before
    background: $tip
  .markdown-alert-important:before
    background: $important
  .markdown-alert-warning:before
    background: $warning
  .markdown-alert-caution:before
    background: $caution

// Theme-specific color definitions
@mixin happy-alert-colors
  +alert-colors(linear-gradient(to bottom, rgba(232, 240, 243, $happy-color-opacity), rgb(223, 227, 231)), linear-gradient(to bottom, rgba(22, 188, 240, $happy-color-opacity), rgba(22, 188, 240, $happy-color-opacity-alt), rgb(30, 207, 227)), linear-gradient(to bottom, rgb(28, 160, 252), rgba(39, 164, 252, $happy-color-opacity), rgb(194, 121, 217) $gradient-stop-3), linear-gradient(to bottom, rgb(241, 227, 167), rgb(253, 248, 123), rgb(16, 175, 248) $gradient-stop-2), linear-gradient(to bottom, rgb(232, 70, 88), rgb(246, 66, 135), rgb(239, 110, 207), rgb(16, 175, 248) $gradient-stop-3))

@mixin deep-alert-colors
  +alert-colors(linear-gradient(to bottom, var(--blue-7), var(--blue-8), var(--blue-9)), linear-gradient(to bottom, var(--green-7), var(--green-8), var(--green-9)), linear-gradient(to bottom, var(--purple-7), var(--purple-8), var(--purple-9)), linear-gradient(to bottom, var(--yellow-7), var(--yellow-8), var(--yellow-9)), linear-gradient(to bottom, var(--red-7), var(--red-8), var(--red-9)))

@mixin monochrome-alert-colors-light
  +alert-colors(linear-gradient(to bottom, var(--gray-3), var(--gray-4), var(--gray-5)), linear-gradient(to bottom, var(--gray-4), var(--gray-5), var(--gray-6)), linear-gradient(to bottom, var(--gray-5), var(--gray-6), var(--gray-7)), linear-gradient(to bottom, var(--gray-6), var(--gray-7), var(--gray-6)), linear-gradient(to bottom, var(--gray-9), var(--gray-10), var(--gray-12)))

@mixin monochrome-alert-colors-dark
  +alert-colors(linear-gradient(to bottom, var(--gray-8), var(--gray-7), var(--gray-8)), linear-gradient(to bottom, var(--gray-7), var(--gray-7), var(--gray-8)), linear-gradient(to bottom, var(--gray-6), var(--gray-6), var(--gray-6)), linear-gradient(to bottom, var(--gray-5), var(--gray-6), var(--gray-5)), linear-gradient(to bottom, var(--gray-1), var(--gray-2), var(--gray-1)))

// Generic header configuration mixin
@mixin configure-headers($accent-1, $accent-2, $accent-3, $accent-4)
  --accent-1: #{$accent-1}
  --accent-2: #{$accent-2}
  --accent-3: #{$accent-3}
  --accent-4: #{$accent-4}
  --flavour-header-gradient: linear-gradient(to right, var(--accent-1), var(--accent-2), var(--accent-3), var(--accent-4))
  --flavour-header-color-text: transparent
  --flavour-strikethrough-gradient: linear-gradient(to right, var(--accent-1), var(--accent-2), var(--accent-3), var(--accent-4))
  --flavour-strikethrough-opacity: 1
  --flavour-link-gradient: linear-gradient(to right, var(--accent-1), var(--accent-2), var(--accent-3), var(--accent-4))
  --flavour-link-opacity: 1

// Theme-specific header mixins
@mixin happy-headers
  +configure-headers($happy-accent-1, $happy-accent-2, $happy-accent-3, $happy-accent-4)
  
  // Apply appropriate theme variant based on color scheme
  &[color-scheme="light"]
    +happy-alert-colors
  @media (prefers-color-scheme: light)
    &:not([color-scheme])
      +happy-alert-colors
  &[color-scheme="dark"]
    +happy-alert-colors
  @media (prefers-color-scheme: dark)
    &:not([color-scheme])
      +happy-alert-colors

@mixin deep-headers
  +configure-headers($deep-accent-1, $deep-accent-2, $deep-accent-3, $deep-accent-4)
  
  // Apply appropriate theme variant based on color scheme
  &[color-scheme="light"]
    +deep-alert-colors
  @media (prefers-color-scheme: light)
    &:not([color-scheme])
      +deep-alert-colors
  &[color-scheme="dark"]
    +deep-alert-colors
  @media (prefers-color-scheme: dark)
    &:not([color-scheme])
      +deep-alert-colors

// Main flavor configuration mixin
@mixin set-flavor($flavor)
  @if $flavor == "happy" or $flavor == "happy-headers"
    +happy-headers
    @if $flavor == "happy"
      --font-weight-strong: $font-weight-normal-flavor
      --flavour-bold-gradient: var(--flavour-header-gradient)
      --flavour-bold-color-text: var(--flavour-header-color-text)
    @else
      --font-weight-strong: $font-weight-headers-only
      --flavour-bold-gradient: none
      --flavour-bold-color-text: var(--text-color)
  @else if $flavor == "deep" or $flavor == "deep-headers"
    +deep-headers
    @if $flavor == "deep"
      --font-weight-strong: $font-weight-normal-flavor
      --flavour-bold-gradient: var(--flavour-header-gradient)
      --flavour-bold-color-text: var(--flavour-header-color-text)
    @else
      --font-weight-strong: $font-weight-headers-only
      --flavour-bold-gradient: none
      --flavour-bold-color-text: var(--text-color)
  @else
    // monochrome (default)
    --font-weight-strong: $font-weight-headers-only
    --flavour-header-gradient: none
    --flavour-header-color-text: var(--text-color)
    --flavour-bold-gradient: none
    --flavour-bold-color-text: var(--text-color)
    --flavour-strikethrough-gradient: none
    --flavour-strikethrough-opacity: 0.7
    --flavour-link-gradient: none
    --flavour-link-opacity: 0.6
    &[color-scheme="light"]
      +monochrome-alert-colors-light
    @media (prefers-color-scheme: light)
      &:not([color-scheme])
        +monochrome-alert-colors-light
    &[color-scheme="dark"]
      +monochrome-alert-colors-dark
    @media (prefers-color-scheme: dark)
      &:not([color-scheme])
        +monochrome-alert-colors-dark

:root
  // Default to monochrome flavor
  +set-flavor("monochrome")

// Force flavor based on HTML attribute
html
  &[flavor="happy"]
    +set-flavor("happy")

  &[flavor="happy-headers"]
    +set-flavor("happy-headers")

  &[flavor="deep"]
    +set-flavor("deep")

  &[flavor="deep-headers"]
    +set-flavor("deep-headers")

  &[flavor="monochrome"]
    +set-flavor("monochrome")

// Apply gradients to elements
h1, h2, h3, h4, h5, h6, header
  background-image: var(--flavour-header-gradient)
  background-size: $content-max-width
  background-clip: text
  -webkit-background-clip: text
  color: var(--flavour-header-color-text)

strong, b
  background-image: var(--flavour-bold-gradient)
  background-clip: text
  -webkit-background-clip: text
  color: var(--flavour-bold-color-text)
  font-weight: var(--font-weight-strong)

// Gradient strikethrough styling
del, s
  position: relative
  text-decoration: none // Remove default strikethrough
  
  &::after
    content: ""
    position: absolute
    left: 0
    right: 0
    top: 60%
    height: 1.5px
    transform: translateY(-50%)
    background: var(--flavour-strikethrough-gradient, var(--text-color))
    opacity: var(--flavour-strikethrough-opacity, 0.7)
    pointer-events: none

// Gradient link underlines
a, :link
  position: relative
  color: var(--text-color) // Keep text color normal
  text-decoration: none // Remove default underline
  cursor: pointer // Show pointer cursor like regular links
  
  &::after
    content: ""
    position: absolute
    left: 0
    right: 0
    bottom: 0
    height: 1px
    background: var(--flavour-link-gradient, var(--text-color))
    opacity: var(--flavour-link-opacity, 0.6)
    transition: opacity 0.2s ease, height 0.2s ease
    pointer-events: none
    
  &:hover::after
    opacity: 1
    height: 2px
    
  &:visited
    color: var(--text-color) // Keep visited links same color as normal text
    cursor: pointer // Show pointer cursor for visited links too


