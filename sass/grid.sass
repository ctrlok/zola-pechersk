@use 'tokens' as *

.container
    max-width: var(--grid-total-width)
    margin: 0 auto
    display: flex
    flex-direction: column
    min-height: 100vh

header
  font-size: var(--font-size-1)
  margin-top: var(--size-fluid-1)
  :link
    text-decoration: none
    color: var(--gray-5)
    cursor: pointer
    position: relative
    font-weight: var(--font-weight-3)

  a
    &:hover
      text-decoration: none

    &:visited
      color: var(--gray-6)

// Main content area with CSS Grid for sidenotes
main
    flex: 1
    display: grid
    grid-template-columns: var(--sidenote-width) var(--sidenote-gap) var(--content-width) var(--sidenote-gap) var(--sidenote-width)
    grid-template-areas: "sidenote-left gap-left content gap-right sidenote-right"
    justify-content: center
    align-items: start
    gap: 0
    width: 100%
    position: relative

// Article takes the center grid area
article
    grid-area: content
    width: 100%
    max-width: var(--content-width)
    position: relative // Enable absolute positioning for sidenotes

// Sidenote containers (using absolute positioning, not grid areas)
// Grid areas reserved for potential future enhancements

footer
  text-align: center
  padding: var(--size-fluid-3) 0
  margin-top: var(--size-fluid-3)
  border-top: var(--border-size-1) solid var(--border-color)
  color: var(--muted-color)

// Wide layout that breaks out of article constraints and uses full grid width
.wide
  position: relative
  margin-top: var(--size-fluid-2)
  margin-bottom: var(--size-fluid-2)
  
  // Mobile: full viewport width
  left: 50%
  right: 50%
  margin-left: -50vw
  margin-right: -50vw
  width: 100vw
  max-width: 100vw
  
  // Desktop: constrain to full grid width (sidenotes + content)
  @media screen and (min-width: breakpoint(lg))
    margin-left: calc(-1 * var(--sidenote-width) - var(--sidenote-gap))
    margin-right: calc(-1 * var(--sidenote-width) - var(--sidenote-gap))
    width: var(--grid-total-width)
    max-width: var(--grid-total-width)
    left: 0
    right: 0
  
  // Handle images, tables, and other content
  img, table, pre, .z-code, iframe, video
    width: 100%
    max-width: 100%
    height: auto
  
  // Center tables for better appearance  
  table
    margin: 0 auto
  
  // Ensure code blocks fill available space
  pre, .z-code
    overflow-x: auto

// Container queries for modern responsive design
@container (max-width: breakpoint(xl))
  :root
    --sidenote-width: var(--size-12)
    --sidenote-gap: var(--size-4)

// Media queries for responsive fallbacks
@media screen and (max-width: breakpoint(xl))
  :root
    --sidenote-width: var(--size-12)
    --sidenote-gap: var(--size-4)
    --grid-total-width: calc(var(--size-12) + var(--size-4) + var(--size-md) + var(--size-4) + var(--size-12))

@media screen and (max-width: breakpoint(lg))
  main
    display: block // Fallback to normal flow on smaller screens
    
  .container
    max-width: $container-max-width-tablet
    padding: var(--size-fluid-1)

  article
    max-width: 100%
    grid-area: unset
    
  // Wide elements on tablet - break out of container padding
  .wide
    margin-left: calc(-1 * var(--size-fluid-1))
    margin-right: calc(-1 * var(--size-fluid-1))
    width: calc(100% + 2 * var(--size-fluid-1))
    max-width: calc(100% + 2 * var(--size-fluid-1))
    left: 0
    right: 0
    padding: 0 var(--size-fluid-1)
    
    // Tables get more breathing room on tablet
    table
      font-size: var(--font-size-0)
      
    // Horizontal scroll for large tables
    overflow-x: auto

@media screen and (max-width: breakpoint(sm))
  .container
    max-width: $container-max-width-phone
    padding: var(--size-fluid-1)

  main
    display: block
    
  // Wide elements on mobile - edge-to-edge
  .wide
    width: 100vw
    max-width: 100vw
    margin: var(--size-2) calc(-50vw + 50%)
    padding: 0 var(--size-2)
    
    // Mobile-optimized content
    table
      font-size: var(--font-size-00)
      
    img, iframe, video
      border-radius: 0
      
    // Better mobile scroll for tables
    overflow-x: auto
    -webkit-overflow-scrolling: touch

// Container query support detection
@supports (container-type: inline-size)
  .container
    container-type: inline-size
    container-name: main-container